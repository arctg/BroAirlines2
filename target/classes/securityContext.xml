<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:security="http://www.springframework.org/schema/security"
             xmlns:p="http://www.springframework.org/schema/mvc"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <!--<http pattern="/rest/**" create-session="stateless">-->
    <!--<intercept-url pattern="/**" access="hasRole('USER')"/>-->
    <!--<http-basic/>-->
    <!--<csrf disabled="true"/>-->
    <!--</http>-->

    <beans:bean id="encoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <beans:constructor-arg name="strength" value="10"/>
    </beans:bean>


    <http use-expressions="true">
        <intercept-url pattern="/css/*" access="permitAll"/>
        <intercept-url pattern="/js/**" access="permitAll"/>
        <intercept-url pattern="/login" access="isAnonymous()"/>
        <intercept-url pattern="/register" access="isAnonymous()"/>
        <intercept-url pattern="/reg" access="isAnonymous()"/>
        <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>


        <form-login
                login-page="/login"
                username-parameter="username"
                password-parameter="password"
                authentication-failure-url="/login?error"
                />
        <logout
                logout-success-url="/login?logout"
                />

    </http>


    <authentication-manager>
        <authentication-provider>
            <!--as it turned out in users-by-username-query must be three columns: username,password,user state-->
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="
        select email,password,enabled
        from users
        where email=?"

                               authorities-by-username-query="
        select users.email,User_roles.roles
        from users
        inner join User_roles
        on User_user_id=users.user_id
        WHERE email=?
        "/>

            <password-encoder ref="encoder">
            </password-encoder>

        </authentication-provider >

        <authentication-provider>
            <user-service>
                <user name="admin@broairlines" password="$2a$10$gZCH676ylPzFVWXe.WBf3uiJ51t1zQSSBXweMACYBeR32MdVzKcMe"
                      authorities="ROLE_USER,ROLE_ADMIN"/>
            </user-service>

            <password-encoder ref="encoder">
            </password-encoder>

        </authentication-provider>

    </authentication-manager>


</beans:beans>